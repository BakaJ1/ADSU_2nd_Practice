import telebot
import config
import Caesar
from telebot import types


bot = telebot.TeleBot(config.TOKEN)


@bot.message_handler(commands=['start'])
def welcome(message):
    sti = open('caesar_p.PNG', 'rb')
    bot.send_sticker(message.chat.id, sti)

    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    item1 = types.KeyboardButton("–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å")
    item2 = types.KeyboardButton("–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å")

    markup.add(item1, item2)
    bot.send_message(message.chat.id, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, {0.first_name}!\n"
                                      "–ò–º—è –º–Ω–µ - <b>{1.first_name}</b>.\n"
                                      "–ò–Ω—Ç–µ—Ä–µ—Å—É–µ—à—å—Å—è –º–æ–∏–º —à–∏—Ñ—Ä–æ–º? –¢–æ–≥–¥–∞ —Ç—ã –ø—Ä–∏—à–µ–ª –ø–æ –∞–¥—Ä–µ—Å—É!\n"
                                      "–í–æ—Ç –Ω–æ–≤–µ–Ω—å–∫–∏–π —Ü–∏—Ä–∫—É–ª—è—Ä –ë-65 —Å –º–æ–∏–º–∏ –∫–æ–º–∞–Ω–¥–∞–º–∏:\n"
                                      "<b><I><u>–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å</u></I></b> - —Å –ø–æ–º–æ—â—å—é –º–æ–µ–≥–æ –ê–ë–°–û–õ–Æ–¢–ù–û –Ω–∞–¥–µ–∂–Ω–æ–≥–æ –∞–ª–≥–æ—Ä–∏—Ç–º–∞ —è –∑–∞—à–∏—Ñ—Ä—É—é —Ç–≤–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ —Ç–∞–∫, —á—Ç–æ –µ–≥–æ –Ω–∏–∫—Ç–æ –Ω–µ —Ä–∞–∑–±–µ—Ä–µ—Ç. <S>–Ø —Ç–∞–∫ –¥—É–º–∞—é...</S>\n"
                                      "<b><I><u>–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å</u></I></b> - –ß–¢–û!? –ö—Ç–æ-—Ç–æ –∑–∞—à–∏—Ñ—Ä–æ–≤–∞–ª –ø–æ—Å–ª–∞–Ω–∏–µ –º–æ–∏–º –∞–ª–≥–æ—Ä–∏—Ç–º–æ–º? –í–æ–∑–º—É—Ç–∏—Ç–µ–ª—å–Ω–æ! –î–∞–≤–∞–π –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–∏–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω–æ–µ –ø–æ—Å–ª–∞–Ω–∏–µ –∏ –Ω–∞–∫–∞–∂–µ–º –Ω–∞–≥–ª–æ–≥–æ –ø–æ–¥—Ä–∞–∂–∞—Ç–µ–ª—è!".format(message.from_user, bot.get_me()), parse_mode='html', reply_markup=markup)



user_data = {}

@bot.message_handler(func=lambda message: message.chat.type == 'private' and message.text in ['–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å', '–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å'])
def handle_initial_message(message):
    chat_id = message.chat.id
    if message.text == '–†–∞—Å—à–∏—Ñ—Ä–æ–≤–∞—Ç—å':
        user_data[chat_id] = {'action': 'decrypt'}
        bot.send_message(chat_id, "üìù–ó–∞–ø–∏—Å—ã–≤–∞—é... –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —Ä–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∏ –∏ —Å–ª–µ–¥–æ–º –∑–∞ –Ω–∏–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–º–µ—â–µ–Ω–∏—è:")
    elif message.text == '–ó–∞—à–∏—Ñ—Ä–æ–≤–∞—Ç—å':
        user_data[chat_id] = {'action': 'encrypt'}
        bot.send_message(chat_id, "üìù–ó–∞–ø–∏—Å—ã–≤–∞—é... –í–≤–µ–¥–∏—Ç–µ —Ç–µ–∫—Å—Ç –¥–ª—è —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏—è–∏ —Å–ª–µ–¥–æ–º –∑–∞ –Ω–∏–º –∫–æ—ç—Ñ—Ñ–∏—Ü–∏–µ–Ω—Ç —Å–º–µ—â–µ–Ω–∏—è:")


@bot.message_handler(func=lambda message: message.chat.id in user_data and 'action' in user_data[message.chat.id])
def handle_text_message(message):
    chat_id = message.chat.id
    user_input_raw = message.text.split(' ')
    user_input = ['', '']
    for i in range(len(user_input_raw)):
        try:
            temp = int(user_input_raw[i])
            user_input[1] = str(temp)
        except:
            user_input[0] += user_input_raw[i] + ' '
    if len(user_input) < 2:
        user_input.append('8')
    if user_input[1] == '':
        user_input[1] = '8'

    action = user_data[chat_id]['action']

    if action == 'decrypt':
        answer = Caesar.caesar_alg(text=user_input[0], caesar_coefficient=int(user_input[1]))
        decrypted_text = answer.DEcrypt()
        bot.send_message(chat_id, decrypted_text)
    elif action == 'encrypt':
        answer = Caesar.caesar_alg(text=user_input[0], caesar_coefficient=int(user_input[1]))
        encrypted_text = answer.ENcrypt()
        bot.send_message(chat_id, encrypted_text)

    del user_data[chat_id]


bot.polling(none_stop=True)


#t.me/ADSU_Caesar_bot